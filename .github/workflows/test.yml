name: Tests

on:
  push:
    branches: [develop]
  pull_request:
    branches: [main]
    types: [opened, synchronize, reopened]

jobs:
  api-tests:
    name: API Tests
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"
          cache-dependency-path: api/package-lock.json

      - name: Install dependencies
        run: |
          cd api
          npm ci

      - name: Run linter (if configured)
        run: |
          cd api
          npm run lint || echo "No linter configured"
        continue-on-error: true

      - name: Run tests
        run: |
          cd api
          npm test

      - name: Generate coverage report
        run: |
          cd api
          npm run test:coverage

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          file: ./api/coverage/lcov.info
          flags: api-tests
          name: api-coverage
          fail_ci_if_error: false

      - name: Archive test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: api-test-results-${{ matrix.node-version }}
          path: |
            api/coverage/

      - name: Check coverage threshold
        run: |
          cd api
          npm run test:coverage -- --coverageThreshold='{"global":{"statements":90,"branches":90,"functions":90,"lines":90}}'

  frontend-tests:
    name: Frontend Tests
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.x]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"
          cache-dependency-path: frontend/package-lock.json

      - name: Install dependencies
        run: |
          cd frontend
          npm ci

      - name: Run linter
        run: |
          cd frontend
          npm run lint

      - name: Run tests with coverage
        run: |
          cd frontend
          npm run test:coverage
        env:
          CHROME_BIN: /usr/bin/google-chrome-stable

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          file: ./frontend/coverage/lcov.info
          flags: frontend-tests
          name: frontend-coverage
          fail_ci_if_error: false

      - name: Archive test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: frontend-test-results-${{ matrix.node-version }}
          path: |
            frontend/coverage/
